# include<iostream>
using namespace std;
void merge( int arr[], int l, int r) {
     int n1 = mid-l+1;
     int n2 = r-mid;
     
     int a[n1];
     int b[n2];
     
     for(int i=0;i<n1;i++){
         a[i]= arr[l+i];
     }
     for(int i=0;i<n2;i++){
         b[i]=arr[mid+1+i];
     }
     
     int i=0;
     int j=0;
     int k=l;
     while(i<n1&& j<n2){
         if(a[i]<b[j]){
             arr[k]=a[i];
             k++;i++;
         }
         else{
             arr[k]=b[j];
             k++; j++;}
             
        }
     } 
     while (i<n1){
         arr[k]=a[i];
         k++;i++;
     }
} 
 int main(){
     int arr[]= {5,4,3,2,1};
     mergesort(arr,0,4);
     for(int i=0;i<5;i++){
         cout<<arr[i]<<" ";
     }
     cout<<endl;
     
     return 0;
 }

 void mergesort(int arr[], int l, int r) {
     if(l<r){
         int mid=(l+r)/2;
         mergesort(arr,l,mid);
         mergesort(arr,mid+1,r);
         
         merge(arr,mid,l,r);
         
     }
 } 
 // spiral order matrice 
 #include <iostream>
using namespace std;
int main(){
    int n,m;
    cin>>n>>m;
    int arr[n][m];
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            cout<<arr[i][j];
        }
    }
    //spiral order print
int row_start = 0,row_end =n-1,col_start = 0, col_end = n-1;
 while(row_start<=row_end&&col_start<=col_end){
     //row start
     for(int col=col_start;col<=col_end;col++){
        cout<<arr[row_start][col]; 
     }
       row_start++;
        //coloum end
     for(int row=row_start;row<=row_end;row++){
         cout<<arr[row][col_end];
     }
        col_end--;//because of shring
        //row end
        for(int col=col_end;col>=col_start; col--){
            cout<<arr[row_end][col];
        } 
        row_end--;
        //col start
        for(int row=row_end;row>=row_start;row++){
            cout<<arr[row][col_start];
        }
       col_start++; 
    }

}   
count sort/////
    /*
    	Count Sort Algorithm
    	**Time Complexity: O(n)
    	**Space Complexity: O(max_number-min_number) //no additional space is required
    */
    
    #include <bits/stdc++.h>
    using namespace std;
    
    //a function that will print the vector passed to it, elements seprated by space
    void printVector(vector<int>A)
    {
    	//traverse all the element and print them
    	for(int i=0;i<A.size();i++)
    	{
    		cout<<A[i]<<" ";	
    	}
    	cout<<"\n";
    }
    
    //the vector A will be sorted inplace and that's why passed with refrence
    void sort(vector<int>&A)
    {
    	//write the code for count sort
    }
    
    int main() {
    	vector<int>A= {6,1,2,3,4,6,1,5,3,4,8};
    	// your code goes here
    	sort(A);
    	cout<<"sorted vector: ";
    	printVector(A);
    
    	return 0;
    }

    
