// find element in 2D matrix//
#include <iostream>
using namespace std;
int main(){
    int n,m;
    cin>>n>>m;
    int arr[n][m];
    for(int i=0;i<n;i++){ 
        for(int j=0;j<m;j++){
            cin>>arr[i][j];
        }
        
        }
        cout<< "matrix is:/n";
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                cout<< arr[i][j]<<" ";
                
            }
            cout<<"/n";
        }
         int x ;
 cin>>x; 
 bool flag =false;
 for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(arr[i][j]==x){
                	
                	cout<<"element found/n";
                	flag=true;
             }
                
        }       
                
 }
 
  if(flag){
  	cout<<"element found/n";
  } else{
  	cout<< "element not found/n";
  }
                

        
} 
  // spiral order matrice 
 #include <iostream>
using namespace std;
int main(){
    int n,m;
    cin>>n>>m;
    int arr[n][m];
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            cout<<arr[i][j];
        }
    }
    //spiral order print
int row_start = 0,row_end =n-1,col_start = 0, col_end = n-1;
 while(row_start<=row_end&&col_start<=col_end){
     //row start
     for(int col=col_start;col<=col_end;col++){
        cout<<arr[row_start][col]; 
     }
       row_start++;
        //coloum end
     for(int row=row_start;row<=row_end;row++){
         cout<<arr[row][col_end];
     }
        col_end--;//because of shring
        //row end
        for(int col=col_end;col>=col_start; col--){
            cout<<arr[row_end][col];
        } 
        row_end--;
        //col start
        for(int row=row_end;row>=row_start;row++){
            cout<<arr[row][col_start];
        }
       col_start++; 
    }

} 

